import axios from"axios";import jwt from"jsonwebtoken";import{v4 as uuidv4}from"uuid";import crypto from"crypto";import{encode as queryEncode}from"querystring";import{getRSI_EMA,getRSI_SMA,getMovingAverage,getExponentialMovingAverage,getBollingerBands,getIchimokuCloud,getMACD,getStoch,getCCI,getADX,getATR,getPivotPoints}from"./func.js";let uuidcaches={};class Coin{constructor(t,e,r,s,a){this.coin=t,this.account=e||new Balance({currency:t}),this.meta=r||new Meta({coin:t}),this.candles=s||{},this.orders=a||new Orders({})}get"심볼"(){return this.meta.심볼}get"티커"(){return this.meta.티커}get"투자주의"(){return this.meta.투자주의}get"보유정보"(){return this.account}get"캔들데이터"(){return this.candles}get"현재가격"(){return this.meta.trade_price}get"거래량"(){return this.meta.acc_trade_price_24h}get"상장개월수"(){return this.meta.months}}class Balance{constructor({currency:t,balance:e,locked:r,avg_buy_price:s,avg_buy_price_modified:a,unit_currency:i,meta:n}){this.currency=t,this.balance=parseFloat(e||0),this.locked=parseFloat(r||0),this.avg_buy_price=parseFloat(s||0),this.avg_buy_price_modified=a||!1,this.unit_currency=i||"KRW",this.updatedAt,this.meta=n}update(t,e){for(var[r,s]of Object.entries(t))this[r]=s;this.balance=parseFloat(this.balance||0),this.locked=parseFloat(this.locked||0),this.avg_buy_price=parseFloat(this.avg_buy_price||0),this.updatedAt=new Date,this.meta=e}get totalValue(){return(this.meta?.trade_price||0)*(this.balance+this.locked)}get"총자산가치"(){return(this.meta?.trade_price||0)*(this.balance+this.locked)}get totalBuy(){return this.avg_buy_price*(this.balance+this.locked)}get"총구매가격"(){return this.avg_buy_price*(this.balance+this.locked)}get hasValue(){return 100<=(this.meta?.trade_price||0)*(this.balance+this.locked)}get"보유중"(){return 100<=(this.meta?.trade_price||0)*(this.balance+this.locked)}get"총보유개수"(){return this.balance+this.locked}get"거래가능보유개수"(){return this.balance}get"거래가능"(){return 100<=(this.meta?.trade_price||0)*this.balance}get"거래가능구매금액"(){return this.avg_buy_price*this.balance}get"평균구매가격"(){return this.avg_buy_price}get"현재수익율"(){return this.balance+this.locked?(this.meta.trade_price-this.avg_buy_price)/this.avg_buy_price:0}}class Meta{constructor({coin:t,market:e,rank:r,months:s,korean_name:a,english_name:i,market_warning:n,market_event:c,trade_date:h,trade_time:o,trade_date_kst:u,trade_time_kst:d,trade_timestamp:l,opening_price:p,high_price:g,low_price:_,trade_price:m,prev_trade_price:y,change:k,change_price:w,change_rate:v,signed_change_price:A,signed_change_rate:f,trade_volume:b,acc_trade_price:O,acc_trade_price_24h:I,acc_trade_volume:C,acc_trade_volume_24h:S,highest_52_week_price:j,highest_52_week_date:q,lowest_52_week_price:D,lowest_52_week_date:M,timestamp:R}){this.coin=t,this.market=e,this.rank=r,this.months=s,this.korean_name=a,this.english_name=i,this.market_warning=n,this.market_event=c,this.trade_date=h,this.trade_time=o,this.trade_date_kst=u,this.trade_time_kst=d,this.trade_timestamp=l,this.opening_price=p,this.high_price=g,this.low_price=_,this.trade_price=m,this.prev_trade_price=y,this.change=k,this.change_price=w,this.change_rate=v,this.signed_change_price=A,this.signed_change_rate=f,this.trade_volume=b,this.acc_trade_price=O,this.acc_trade_price_24h=I,this.acc_trade_volume=C,this.acc_trade_volume_24h=S,this.highest_52_week_price=j,this.highest_52_week_date=q,this.lowest_52_week_price=D,this.lowest_52_week_date=M,this.timestamp=R,this.updatedAt}update(t){for(var[e,r]of Object.entries(t))this[e]=r}get"심볼"(){return this.coin}get"티커"(){return this.market}get"투자주의"(){let e={};var t=Object.keys(this.market_event?.caution||{}).filter(t=>this.market_event?.caution?.[t]);return t.length&&t.forEach(t=>e[t]=!0),Object.keys(e).length?e:null}get"투자유의"(){return!!this.market_event?.warning}get"현재가격"(){return this.trade_price}get"거래량"(){return this.acc_trade_price_24h}get"거래량순위"(){return this.rank}get"상장개월수"(){return this.months}}class Order{constructor({uuid:t,side:e,ord_type:r,price:s,state:a,market:i,created_at:n,volume:c,remaining_volume:h,reserved_fee:o,remaining_fee:u,paid_fee:d,locked:l,executed_volume:p,executed_funds:g,trades_count:_}){this.uuid=t,this.side=e,this.ord_type=r,this.price=parseFloat(s||0),this.state=a,this.market=i,this.created_at=n,this.timestamp=new Date(n),this.volume=parseFloat(c||0),this.remaining_volume=parseFloat(h||0),this.reserved_fee=parseFloat(o||0),this.remaining_fee=parseFloat(u||0),this.paid_fee=parseFloat(d||0),this.locked=parseFloat(l||0),this.executed_volume=parseFloat(p||0),this.executed_funds=parseFloat(g||0),this.trades_count=_}}class Orders extends Object{constructor(t){super(t)}toArray(){return Object.values(this).map(t=>new Order(t)).sort((t,e)=>e.timestamp-t.timestamp)}getBuyOrders(){return this.toArray().filter(t=>"bid"==t.side)}getSellOrders(){return this.toArray().filter(t=>"ask"==t.side)}getWaitingOrders(){return this.toArray().filter(t=>"wait"==t.state||"watch"==t.state)}get orders(){return this.toArray()}get"전체"(){return this.toArray()}get buyOrders(){return this.getBuyOrders()}get"매수"(){return this.getBuyOrders()}get sellOrders(){return this.getSellOrders()}get"매도"(){return this.getSellOrders()}get waitingOrders(){return this.getWaitingOrders()}get"대기"(){return this.getWaitingOrders()}}class Candles extends Object{constructor(t){super(t),this.updatedAt}toArray(){return Object.values(this).sort((t,e)=>t.timestamp-e.timestamp)}getLastItem(){var t=this.toArray();return t[t.length-1]}get"오래된순"(){return Object.values(this).sort((t,e)=>t.timestamp-e.timestamp)}get"최신순"(){return Object.values(this).sort((t,e)=>e.timestamp-t.timestamp)}get"마지막"(){return this.최신순[0]}getRSI(t=0,e){return getRSI_EMA(this.toArray().map(t=>t.trade_price),t,e)}"RSI계산"(t=0,e){return this.getRSI(t,e)}getRSI_EMA(t=0,e){return getRSI_EMA(this.toArray().map(t=>t.trade_price),t,e)}"지수이동평균RSI계산"(t=0,e){return this.getRSI_EMA(t,e)}getRSI_SMA(t=0,e){return getRSI_SMA(this.toArray().map(t=>t.trade_price),t,e)}"단순이동평균RSI계산"(t=0,e){return this.getRSI_SMA(t,e)}getMovingAverage(t=0,e){return getMovingAverage(this.toArray().map(t=>t.trade_price),t,e)}"이동평균계산"(t=0,e){return this.getMovingAverage(t,e)}"단순이동평균계산"(t=0,e){return this.getMovingAverage(t,e)}getExponentialMovingAverage(t=0,e){return getExponentialMovingAverage(this.toArray().map(t=>t.trade_price),t,e)}"지수이동평균계산"(t=0,e){return this.getExponentialMovingAverage(t,e)}getBollingerBands(t=0,e,r=2){return getBollingerBands(this.toArray().map(t=>t.trade_price),t,e,r)}"볼린저밴드계산"(t=0,e,r=2){return this.getBollingerBands(t,e,r)}getIchimokuCloud(t=0,e={conversion:9,base:26,span2:52,laggingSpan:26}){return getIchimokuCloud(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"일목균형표계산"(t=0,e={conversion:9,base:26,span2:52,laggingSpan:26}){return this.getIchimokuCloud(t,e)}getMACD(t=0,e={short:12,long:26,signal:9}){return getMACD(this.toArray().map(t=>t.trade_price),t,e)}"MACD계산"(t=0,e={short:12,long:26,signal:9}){return this.getMACD(t,e)}getStoch(t=0,e={short:12,long:26,signal:9}){return getStoch(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"스토캐스틱계산"(t=0,e={short:12,long:26,signal:9}){return this.getStoch(t,e)}getCCI(t=0,e){return getCCI(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"CCI계산"(t=0,e){return this.getCCI(t,e)}getADX(t=0,e){return getADX(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"ADX계산"(t=0,e){return this.getADX(t,e)}getATR(t=0,e){return getATR(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"ATR계산"(t=0,e){return this.getATR(t,e)}getPivotPoints(t=0,e){return getPivotPoints(this.toArray().map(t=>t.high_price),this.toArray().map(t=>t.low_price),this.toArray().map(t=>t.trade_price),t,e)}"피봇포인트계산"(t=0,e){return this.getPivotPoints(t,e)}}export default class Upbit{constructor({access_key:t,secret_key:e},r={}){this.access_key=t,this.secret_key=e,this.updatedAt=new Date,this.initedAt,this.running=!1,this.key_errored=!1,this.rankfilter=0,this.marketUpdated,this.lastAccountUpdateRequested=0,this.terms={},this.license={},this.listeners={},this.subscription=r.subscription||[5,"months"],this.ignore=r.ignore||[],this.sleep=e=>new Promise(t=>setTimeout(t,e)),this.coins={},this.diffs={},this.requestcount=0,this.candlesInitCount=r.candlesInitCount||200,this.queue={};let h=async()=>{for(var{uuid:e,method:r,url:s,options:a,options2:i,res:n,rej:c}of Object.values(this.queue))try{n((await axios[r](s,a,i)).data),delete this.queue[e]}catch(t){if(429==t.status)await this.sleep(1e3);else{switch(t?.response?.data?.error?.name){case"no_authorization_token":this.running&&this.emit("error",{code:"api_key",name:"업비트 통신 오류",message:"API 키가 없습니다. 상세 설정 페이지에서 업비트 API 키를 입력해 주세요."}),this.running=!1,this.key_errored=!0;break;case"invalid_access_key":this.running&&this.emit("error",{code:"api_key",name:"업비트 통신 오류",message:"잘못된 엑세스 키가 입력되어 있습니다. 엑세스 키를 재발급 해 주세요."}),this.running=!1,this.key_errored=!0;break;case"jwt_verification":this.running&&this.emit("error",{code:"api_key",name:"업비트 통신 오류",message:"업비트 API 키 인증에 실패했습니다. API 키를 재발급 해 주세요."}),this.running=!1,this.key_errored=!0;break;case"no_authorization_ip":this.running&&this.emit("error",{code:"api_key",name:"업비트 통신 오류",message:"업비트 API 키의 IP 주소와 현재 PC의 IP 주소가 다릅니다. 현재 PC의 IP 주소로 API 키를 재발급 해 주세요."}),this.running=!1,this.key_errored=!0}console.log(s,t?.response?.data?.error?.name),"nonce_used"==t?.response?.data?.error?.name?(n=await this.getUUID(),this.new_uuid={...this.queue[e],uuid:n},delete this.queue[e]):(delete this.queue[e],c({uuid:e,method:r,url:s,options:{...a,...i},error:t?.response?.data?.error}))}return void h()}await this.sleep(10),h()},s=(h(),async t=>{await this.updateCandles(),await this.sleep(10),s()}),a=(s(!0),async()=>{this.key_errored||await this.updateAccount(),await this.sleep(500),a()});a()}async getUUID(){return new Promise(async t=>{let e=uuidv4();return uuidcaches[e]?(await this.sleep(10),console.log("same uuid"),t(await this.getUUID())):(uuidcaches[e]=!0,setTimeout(()=>{uuidcaches[e]&&delete uuidcaches[e]},3e3),t(e))})}createJWT(){var t;if(this.access_key&&this.secret_key)return t={access_key:this.access_key,nonce:Date.now().toString()},jwt.sign(t,this.secret_key);throw this.emit("error",{market:"upbit",config:config,response:"invalid_access_key"}),new Error("Invalid key")}getAxiosConfig(){try{return{headers:{Authorization:"Bearer "+this.createJWT()}}}catch(t){return{}}}async request(r,s,a={},i={}){let n=await this.getUUID();return this.queue[n]?(await this.sleep(10),this.request(r,s,a,i)):new Promise((t,e)=>{this.queue[n]={uuid:n,method:r,url:s,options:a,options2:i,res:t,rej:e}})}async updateCandlesData(e,r){var t="KRW-"+e;let s=this.candlesInitCount;this.coins[e].candles||(this.coins[e].candles={}),this.coins[e].candles[r]||(this.coins[e].candles[r]=new Candles({}));let a;switch(r){case"days":a="days";break;case"weeks":a="weeks";break;case"months":a="months";break;default:a="minutes/"+r}var i=Object.values(this.coins[e].candles[r]);if(i.length){var n=i.sort((t,e)=>e.timestamp-t.timestamp)[0].timestamp,c=new Date;let t;switch(r){case"days":case"weeks":case"months":t=Math.floor((c-n)/864e5);break;default:t=Math.floor((c-n)/6e4)}switch(r){case"days":s=t+2;break;case"weeks":s=Math.ceil((t+1)/7)+1;break;case"months":s=Math.ceil((t+1)/30)+1;break;default:s=Math.ceil((t+1)/parseInt(r))+1}}i=`https://api.upbit.com/v1/candles/${a}?market=${t}&count=`+s;try{var h=await this.request("get",i);h.sort((t,e)=>t.timestamp-e.timestamp),h.forEach(t=>{this.coins[e].candles[r][t.candle_date_time_kst]=t}),this.emit("candles",{coin:e,unit:r,data:h}),"months"==r&&(this.coins[e].meta.months=this.coins[e].candles[r].toArray().length),this.coins[e].candles.updatedAt=new Date}catch(t){}}async updateAccount(t){if(!(Date.now()-this.lastAccountUpdateRequested<1e3)){this.lastAccountUpdateRequested=Date.now();var e,r,s={};try{var a=await this.request("get","https://api.upbit.com/v1/accounts",this.getAxiosConfig());a.forEach(t=>{this.coins[t.currency]||(this.coins[t.currency]=new Coin(t.currency))});for(let e of Object.keys(this.coins)){var i,n,c=a.find(t=>t.currency==e)||{balance:0,locked:0,avg_buy_price:0};for([i,n]of Object.entries(c))this.coins[e].account[i]!=n&&(s[e]=!0);this.coins[e].account.update(c,this.coins[e].meta)}}catch(t){}try{(await this.getOrders()).forEach(t=>{var e=t.market.replace("KRW-","");this.initedAt&&!this.coins[e].orders[t.uuid]&&this.emit("order",new Order(t)),this.coins[e].orders[t.uuid]&&this.coins[e].orders[t.uuid]?.state!=t.state&&this.emit("order",new Order(t)),this.coins[e].orders[t.uuid]=t}),this.initedAt=new Date}catch(t){}for(e of Object.keys(s))t||this.emit("updated",this.coins[e]);await this.updateMarket();for(r of Object.values(this.coins))this.emit("account",r.account);this.updatedAt=new Date}}async updateMarket(r){let s=new Date,a=[];try{(await this.request("get","https://api.upbit.com/v1/market/all?is_details=true")).filter(t=>t.market.startsWith("KRW-")).forEach(t=>{var e=t.market.replace("KRW-","");a.push(e),this.coins[e]||(this.coins[e]=new Coin(e)),this.diffs[e]=!0,this.coins[e].meta.update(t)})}catch(t){}try{(await this.request("get","https://api.upbit.com/v1/ticker?markets="+a.filter(t=>!this.ignore.includes(t)).map(t=>"KRW-"+t).filter(t=>t).join(","))).forEach(t=>{var e=t.market.replace("KRW-","");this.coins[e].meta.update(t)})}catch(t){}Object.entries(this.coins).sort(([,t],[,e])=>t.acc_trade_price_24h-e.acc_trade_price_24h).forEach(([t],e)=>{this.coins[t].meta.rank!==e&&(this.diffs[t]={key:"rank",requested:s}),this.coins[t].meta.rank=e,this.diffs[t]&&this.diffs[t].requested==s&&!r&&this.emit("updated",this.coins[t])}),this.marketUpdated=Date.now()}async updateCandles(){try{await this.updateMarket();for(var t of Object.keys(this.diffs)){if(this.ignore.includes(t));else if(this.coins[t]?.meta?.market){if(this.rankfilter&&this.coins[t].meta.rank>=this.rankfilter&&!this.coins[t].account.hasValue){delete this.diffs[t];continue}for(var e of this.subscription)await this.updateCandlesData(t,e),5e3<Date.now()-this.marketUpdated&&await this.updateMarket(),this.coins[t].meta.updatedAt=new Date;this.emit("updated",this.coins[t])}delete this.diffs[t]}}catch(t){}}emit(t,e){try{this.listeners[t].forEach(async t=>t(e))}catch(t){}}on(t,e){this.listeners[t]||(this.listeners[t]=new Set),this.listeners[t].add(e)}off(t,e){this.listeners[t].delete(e)}getTickSize(t,e="floor",r){let s;s=["ADA","ALGO","BLUR","CELO","ELF","EOS","GRS","GRT","ICX","MANA","MINA","POL","SAND","SEI","STG","TRX"].includes(r)?1:2e6<=t?1e3:1e6<=t?500:5e5<=t?100:1e5<=t?50:1e4<=t?10:1e3<=t?1:100<=t?.1:10<=t?.01:1<=t?.001:.1<=t?1e-4:.01<=t?1e-5:.001<=t?1e-6:1e-4<=t?1e-7:1e-8;let a;a="floor"===e?Math.floor(t/s)*s:"round"===e?Math.round(t/s)*s:Math.ceil(t/s)*s;r=(s.toString().split(".")[1]||"").length;return parseFloat(a.toFixed(r))}async getOrder(t){t={uuid:t};try{var e=queryEncode(t),r=crypto.createHash("sha512").update(e,"utf-8").digest("hex"),s=jwt.sign({access_key:this.access_key,nonce:await this.getUUID(),query_hash:r,query_hash_alg:"SHA512"},this.secret_key),a=await this.request("get","https://api.upbit.com/v1/order?"+e,{headers:{Authorization:"Bearer "+s,"Content-Type":"application/json"},json:t}),i=a.market.replace("KRW-","");return this.coins[i].orders[a.uuid]&&this.coins[i].orders[a.uuid]?.state!=a.state&&this.emit("order",new Order(a)),this.coins[i].orders[a.uuid]=a}catch(t){}}async getOrders(t,e,r){let s=[];var e={market:t,start_time:e?new Date(e).toISOString():null,end_time:r?new Date(r).toISOString():null},r={states:["done","cancel"]},a={...e,...r};try{var i=r.states.map(t=>"states[]="+t).join("&"),n=queryEncode(e)+"&"+i,c=crypto.createHash("sha512").update(n,"utf-8").digest("hex"),h=jwt.sign({access_key:this.access_key,nonce:await this.getUUID(),query_hash:c,query_hash_alg:"SHA512"},this.secret_key),o=await this.request("get","https://api.upbit.com/v1/orders/closed",{headers:{Authorization:"Bearer "+h,"Content-Type":"application/json"},json:a});s=s.concat(o)}catch(t){}r={market:t},e={states:["wait","watch"]},i={...r,...e};try{var u=e.states.map(t=>"states[]="+t).join("&"),d=queryEncode(r)+"&"+u,l=crypto.createHash("sha512").update(d,"utf-8").digest("hex"),p=jwt.sign({access_key:this.access_key,nonce:await this.getUUID(),query_hash:l,query_hash_alg:"SHA512"},this.secret_key),g=await this.request("get","https://api.upbit.com/v1/orders/open",{headers:{Authorization:"Bearer "+p,"Content-Type":"application/json"},json:i});s=s.concat(g)}catch(t){}return s.sort((t,e)=>t.createdAt-e.createdAt)}async cancelOrders(t){var e,r=[];for(e of t){var s={uuid:e.uuid};try{var a=queryEncode(s),i=crypto.createHash("sha512").update(a,"utf-8").digest("hex"),n=jwt.sign({access_key:this.access_key,nonce:await this.getUUID(),query_hash:i,query_hash_alg:"SHA512"},this.secret_key),c=await this.request("delete","https://api.upbit.com/v1/order",{headers:{Authorization:"Bearer "+n,"Content-Type":"application/json"},data:s});r.push(new Order(c))}catch(t){}}return await this.updateAccount(),r}async makeOrder(r,c,h,o,u,d="floor"){return new Promise(async s=>{var t={market:r,side:c,volume:o?o.toString():null,price:u?this.getTickSize(u,d,r.split("-")[1]).toString():null,ord_type:h};try{var e=queryEncode(t),a=crypto.createHash("sha512").update(e,"utf-8").digest("hex"),i=jwt.sign({access_key:this.access_key,nonce:await this.getUUID(),query_hash:a,query_hash_alg:"SHA512"},this.secret_key);let r=await this.request("post","https://api.upbit.com/v1/orders",t,{headers:{Authorization:"Bearer "+i,"Content-Type":"application/json"}});var n=r.market.replace("KRW-","");if(this.coins[n].orders[r.uuid]=r,this.emit("order",new Order(r)),"done"==r.state||"cancel"==r.state)return await this.updateAccount(),s(new Order(r));{let e=async()=>{var t=await this.getOrder(r.uuid);if("done"==t?.state||"cancel"==t?.state)return await this.updateAccount(),s(new Order(t));await this.sleep(200),e()};e()}}catch(t){}})}get usableCurrency(){return this.coins.KRW?.account?.balance||0}get"가용자금"(){return this.usableCurrency}get totalValue(){let e=0;return Object.values(this.coins).forEach(({account:t})=>{e+=t.totalValue}),e+this.usableCurrency}get"총자산가치"(){return this.totalValue}get totalBuyValue(){let e=0;return Object.values(this.coins).forEach(({account:t})=>{e+=t.totalValue}),e}get"보유코인개수"(){let e=0;return Object.values(this.coins).forEach(({account:t})=>{t.hasValue&&e++}),e}get"총투자가치"(){return this.totalBuyValue}get totalBuy(){let e=0;return Object.values(this.coins).forEach(({account:t})=>{e+=t.totalBuy}),e}get"총구매가격"(){return this.totalBuy}get totalOriginValue(){let e=0;return Object.values(this.coins).forEach(({account:t})=>{e+=t.totalBuy}),e+this.usableCurrency}get"총원금"(){return this.totalOriginValue}get"현재수익율"(){return(this.totalValue-this.totalOriginValue)/this.totalOriginValue}async"업데이트대기"(s){return new Promise(t=>{let e=new Date,r=async()=>{if(e<this.updatedAt&&s&&e<this.coins[s].meta.updatedAt)return t();await this.sleep(100),r()};r()})}async"최신화"(t){await this.updateAccount(!0),await this.updateMarket(!0);for(var e of this.subscription)await this.updateCandlesData(t,e),this.coins[t].meta.updatedAt=new Date}}export{Coin,Balance,Meta,Order,Orders,Candles};